// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/reward/v1/healthcheck": {
            "get": {
                "description": "Returns json stating with pass status and http response code 200 OK, otherwise returns http response code 500 Internal Server Error.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Checks the health of the microservice",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HealthCheck"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        },
        "/reward/v1/reward/{id}": {
            "post": {
                "description": "This API allows Admin to directly add reward points to the customer. It accepts reward points and description in the request body, and on successful insertion in database, it returns 200 OK.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Add reward points to the customer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Reward"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "models.HealthCheck": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "UP"
                }
            }
        },
        "models.Reward": {
            "type": "object",
            "properties": {
                "customerId": {
                    "type": "string",
                    "example": "1243"
                },
                "description": {
                    "type": "string",
                    "example": "Reward points in celebration of 50 years of Company ABC"
                },
                "points": {
                    "type": "integer",
                    "example": 200
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
