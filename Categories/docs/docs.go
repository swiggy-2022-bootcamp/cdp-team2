// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get All Categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErr"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create new Category, id is auto-assigned based on timestamp.",
                "parameters": [
                    {
                        "description": "category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErr"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete Multiple Categories",
                "parameters": [
                    {
                        "description": "category_ids",
                        "name": "category_ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErrors"
                        }
                    }
                }
            }
        },
        "/categories/{_id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get Single Category By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErr"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update Category By Id, Updated Category is returned",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "category",
                        "name": "category",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErr"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete Single Category By Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category_id",
                        "name": "_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ApiResponseWithErr"
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ApiResponseWithErr": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "api.ApiResponseWithErrors": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Category": {
            "description": "Category Model",
            "type": "object",
            "properties": {
                "category_description": {
                    "x-omitempty": true,
                    "$ref": "#/definitions/models.CategoryDesc"
                },
                "category_id": {
                    "type": "integer",
                    "x-omitempty": true
                }
            }
        },
        "models.CategoryDesc": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "x-omitempty": true
                },
                "meta_description": {
                    "type": "string",
                    "x-omitempty": true
                },
                "meta_keyword": {
                    "type": "string",
                    "x-omitempty": true
                },
                "meta_title": {
                    "type": "string",
                    "x-omitempty": true
                },
                "name": {
                    "type": "string",
                    "x-omitempty": true
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "35.84.28.237:30204",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Categories Api",
	Description:      "This is categories crud service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
